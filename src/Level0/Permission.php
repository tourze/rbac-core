<?php

namespace Tourze\RBAC\Core\Level0;

/**
 * 许可（Permission）
 *
 * 是指员工在系统内的可被赋予的最小功能单元。
 *
 * 其中许可又包括“操作”和“控制对象”其中许可被赋予角色，而不是用户，当一个角色被指定给一个用户时，此用户就拥有了该角色所包含的许可
 * 权限是对某个或某些受保护的对象执行操作的许可。
 *
 * 功能越多，操作越繁琐，复杂度越高，所以选择合适的功能粒度才能快速理清权限问题，也能帮助用户提升工作效率。
 * 功能的粒度从粗到细一般分为：模块级->页面级->接口级（接口级的功能权限指的是哪个角色能调用哪些接口）。
 *
 * 如果权限必须细化到页面甚至接口级别应该要遵循一个优先级规律，即只要分配低优先级的功能必须先分配高优先级的功能，否则会出现有删除权限却找不到操作位置的尴尬情况（删除按钮在列表页面，却没有分配查看列表页面的权限）。
 * 具体做法可以通过交互的方式解决，比如检测到勾选低优先级的功能就自动帮助勾选高优先级的，或者通过提示性的文字帮助用户组合勾选。
 */
interface Permission
{
    /**
     * 唯一标识
     */
    public function getName(): string;

    /**
     * 许可、权限描述
     */
    public function getTitle(): string;

    /**
     * 获取上级权限
     */
    public function getParentPermission(): ?Permission;
}
